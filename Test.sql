-- Скрипт для проведения исследования
SET NOCOUNT ON;
-- процедура инициализации источника
DELETE T_SOURCE;
EXEC SP_INIT_SOURCE 500;

-- Создание ключей для ключа/значение
DELETE FROM [T_DATA_VALUE];
DELETE FROM [T_DATA_HEAD];
DELETE FROM T_DATA_KEY;

INSERT INTO T_DATA_KEY(ID, NAME) VALUES(1, N'SUM');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(2, N'SUM1');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(3, N'SUM2');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(4, N'SUM3');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(5, N'SUM4');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(6, N'FLAG');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(7, N'FLAG1');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(8, N'FLAG2');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(9, N'STR');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(10, N'STR1');
INSERT INTO T_DATA_KEY(ID, NAME) VALUES(11, N'STR2');	

DECLARE @ROWCOUNT INT; -- Количество строк в операторе
DECLARE @MAXCOUNT INT; -- Максимальное количество строк в оператор
DECLARE @START DATETIME2; -- Время начала выполнения
DECLARE @ATTEMPT INT; -- Номер повторения
DECLARE @MAXATTEMPT INT; -- Количество повторений
DECLARE @ROWDELTA INT; -- Количество записей в операции

DECLARE @CURRENTID BIGINT; -- Текущее значение курсора
DECLARE @I INT; -- Итератор
DECLARE @STRING_DATA AS NVARCHAR(2000);

-- Переменные для работы курсора
DECLARE @TYPE_ID BIGINT;
DECLARE @SUM  DECIMAL(18,2);
DECLARE @SUM1 DECIMAL(18,2);
DECLARE @SUM2 DECIMAL(18,2);
DECLARE @SUM3 DECIMAL(18,2);
DECLARE @SUM4 DECIMAL(18,2);
DECLARE @FLAG  BIT;
DECLARE @FLAG1 BIT;
DECLARE @FLAG2 BIT;
DECLARE @STR  NVARCHAR(5);
DECLARE @STR1 NVARCHAR(30);
DECLARE @STR2 NVARCHAR(70);

-- Инициализация испытаний
SET @MAXATTEMPT=2;
SET @ROWDELTA=20000;
-- максимальное кол-во данных
--SELECT @MAXCOUNT=COUNT(*) FROM [T_SOURCE];
SET @MAXCOUNT=100000;

-- Очищаем таблицу результатов
DELETE FROM T_TEST_RESULT;

PRINT '-- ИНИЦИАЛИЗАЦИЯ ВЫПОЛНЕНА'

-- Испытания
SET @ATTEMPT=1;
WHILE (@ATTEMPT<=@MAXATTEMPT)
BEGIN
	PRINT ' ' 
	PRINT @ATTEMPT
	PRINT '-- STANDART'
	WAITFOR DELAY '00:00:02'
	-- STANDART
	-- INSERT
	PRINT '---- INSERT'

	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO [T_STANDART]([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
				FROM T_SOURCE
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_STANDART','INSERT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	-- SELECT
	PRINT '---- SELECT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO T_RESULT([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
				FROM T_STANDART
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_STANDART','SELECT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	-- CURSOR
	PRINT '---- CURSOR'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		DECLARE CURSOR1 CURSOR FOR
			SELECT TOP (@ROWCOUNT)
				[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
			FROM T_SOURCE
		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			INSERT INTO T_RESULT([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
				VALUES(@TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2);
			FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		END
		CLOSE CURSOR1;
		DEALLOCATE CURSOR1;

		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_STANDART','CURSOR', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));

		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	DELETE FROM [T_STANDART];
	DELETE FROM [T_RESULT]

	PRINT '-- JSON'
	-- JSON
	PRINT '---- INSERT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO [T_JSON]([TYPE_ID], [STRING_DATA])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], (SELECT [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2] FOR JSON PATH , WITHOUT_ARRAY_WRAPPER) AS [DATE_STRING] 
				FROM T_SOURCE
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_JSON','INSERT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	--
	PRINT '---- SELECT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO T_RESULT([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], 
					JSON_VALUE([STRING_DATA],N'$.SUM' ) AS [SUM], 
					JSON_VALUE([STRING_DATA],N'$.SUM1') AS [SUM1], 
					JSON_VALUE([STRING_DATA],N'$.SUM2') AS [SUM2], 
					JSON_VALUE([STRING_DATA],N'$.SUM3') AS [SUM3], 
					JSON_VALUE([STRING_DATA],N'$.SUM4') AS [SUM4], 
					JSON_VALUE([STRING_DATA],N'$.FLAG') AS [FLAG], 
					JSON_VALUE([STRING_DATA],N'$.FLAG1') AS [FLAG1], 
					JSON_VALUE([STRING_DATA],N'$.FLAG2') AS [FLAG2], 
					JSON_VALUE([STRING_DATA],N'$.STR') AS [STR], 
					JSON_VALUE([STRING_DATA],N'$.STR1') AS [STR1], 
					JSON_VALUE([STRING_DATA],N'$.STR2') AS [STR2] 
				FROM T_JSON
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_JSON','SELECT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	-- CURSOR
	PRINT '---- CURSOR'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		DECLARE CURSOR1 CURSOR FOR
			SELECT TOP (@ROWCOUNT)
				[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
			FROM T_SOURCE
		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			INSERT INTO T_JSON([TYPE_ID], [STRING_DATA])
				VALUES(@TYPE_ID,  (SELECT @SUM AS [SUM], @SUM1 AS [SUM1], @SUM2 AS SUM2, 
				@SUM3 AS SUM3, @SUM4 AS SUM4, @FLAG AS FLAG, @FLAG1 AS FLAG1, @FLAG2 AS FLAG2, 
				@STR AS [STR], @STR1 AS [STR1], @STR2 AS [STR2] FOR JSON PATH , WITHOUT_ARRAY_WRAPPER));
			FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		END
		CLOSE CURSOR1;
		DEALLOCATE CURSOR1;
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_JSON','CURSOR', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));

		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	DELETE FROM [T_JSON]
	DELETE FROM [T_RESULT]

	PRINT '-- XML'
	-- XML
	PRINT '---- INSERT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO [T_XML]([TYPE_ID], [STRING_DATA])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], (SELECT [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2] FOR XML PATH) AS [DATE_STRING] 
				FROM T_SOURCE
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_XML','INSERT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	--
	PRINT '---- SELECT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO T_RESULT([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], 
					[STRING_DATA].value('/row[1]/SUM[1]','decimal(18,2)') AS [SUM], 
					[STRING_DATA].value('/row[1]/SUM1[1]','decimal(18,2)') AS [SUM1], 
					[STRING_DATA].value('/row[1]/SUM2[1]','decimal(18,2)') AS [SUM2], 
					[STRING_DATA].value('/row[1]/SUM3[1]','decimal(18,2)') AS [SUM3], 
					[STRING_DATA].value('/row[1]/SUM4[1]','decimal(18,2)') AS [SUM4], 
					[STRING_DATA].value('/row[1]/FLAG[1]','bit') AS [FLAG], 
					[STRING_DATA].value('/row[1]/FLAG1[1]','bit') AS [FLAG1], 
					[STRING_DATA].value('/row[1]/FLAG2[1]','bit') AS [FLAG2], 
					[STRING_DATA].value('/row[1]/STR[1]','nvarchar(5)') AS [STR], 
					[STRING_DATA].value('/row[1]/STR1[1]','nvarchar(30)') AS [STR1], 
					[STRING_DATA].value('/row[1]/STR2[1]','nvarchar(70)') AS [STR2] 
				FROM T_XML
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_XML','SELECT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	PRINT '---- CURSOR'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		DECLARE CURSOR1 CURSOR FOR
			SELECT TOP (@ROWCOUNT)
				[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
			FROM T_SOURCE
		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			INSERT INTO T_XML([TYPE_ID], [STRING_DATA])
				VALUES(@TYPE_ID,  (SELECT @SUM AS [SUM], @SUM1 AS [SUM1], @SUM2 AS SUM2, 
				@SUM3 AS SUM3, @SUM4 AS SUM4, @FLAG AS FLAG, @FLAG1 AS FLAG1, @FLAG2 AS FLAG2, 
				@STR AS [STR], @STR1 AS [STR1], @STR2 AS [STR2] FOR XML PATH));
			FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		END
		CLOSE CURSOR1;
		DEALLOCATE CURSOR1;
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_XML','CURSOR', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	DELETE FROM [T_XML]
	DELETE FROM [T_RESULT]

	PRINT '-- KEY/VALUE'
	PRINT '---- INSERT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		DECLARE CURSOR1 CURSOR FOR
			SELECT TOP (@ROWCOUNT)
				[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
			FROM T_SOURCE
		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			-- Создаем голову
			INSERT INTO T_DATA_HEAD([TYPE_ID])  VALUES (@TYPE_ID);
			-- Сохраняем значение ID
			SET @CURRENTID=SCOPE_IDENTITY();
			-- Записываем значения в таблицу
			INSERT INTO [T_DATA_VALUE] ([HEAD_ID], [KEY_ID], VALUE_DECIMAL, VALUE_BIT, VALUE_STRING)
				VALUES	(@CURRENTID, 1 , @SUM , NULL , NULL),
						(@CURRENTID, 2 , @SUM1, NULL , NULL),
						(@CURRENTID, 3 , @SUM2, NULL , NULL),
						(@CURRENTID, 4 , @SUM3, NULL , NULL),
						(@CURRENTID, 5 , @SUM4, NULL , NULL),
						(@CURRENTID, 6 , NULL ,@FLAG , NULL),
						(@CURRENTID, 7 , NULL ,@FLAG1, NULL),
						(@CURRENTID, 8 , NULL ,@FLAG2, NULL),
						(@CURRENTID, 9 , NULL , NULL , @STR ),
						(@CURRENTID, 10, NULL , NULL , @STR1),
						(@CURRENTID, 11, NULL , NULL , @STR2);
			-- 
			FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		END
		CLOSE CURSOR1;
		DEALLOCATE CURSOR1;
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_DATA','INSERT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	PRINT '---- SELECT'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		INSERT INTO T_RESULT([TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2])
			SELECT TOP (@ROWCOUNT)
					[TYPE_ID], 
					D .[VALUE_DECIMAL] AS [SUM], 
					D1.[VALUE_DECIMAL] AS [SUM1], 
					D2.[VALUE_DECIMAL] AS [SUM2], 
					D3.[VALUE_DECIMAL] AS [SUM3], 
					D4.[VALUE_DECIMAL] AS [SUM4], 
					F .[VALUE_BIT] AS [FLAG], 
					F1.[VALUE_BIT] AS [FLAG1], 
					F2.[VALUE_BIT] AS [FLAG2], 
					S .[VALUE_STRING] AS [STR], 
					S1.[VALUE_STRING] AS [STR1], 
					S2.[VALUE_STRING] AS [STR2] 
				FROM T_DATA_HEAD AS DH
					INNER JOIN [T_DATA_VALUE] AS D  ON D .HEAD_ID=DH.ID AND D .[KEY_ID]=1
					INNER JOIN [T_DATA_VALUE] AS D1 ON D1.HEAD_ID=DH.ID AND D1.[KEY_ID]=2
					INNER JOIN [T_DATA_VALUE] AS D2 ON D2.HEAD_ID=DH.ID AND D2.[KEY_ID]=3
					INNER JOIN [T_DATA_VALUE] AS D3 ON D3.HEAD_ID=DH.ID AND D3.[KEY_ID]=4
					INNER JOIN [T_DATA_VALUE] AS D4 ON D4.HEAD_ID=DH.ID AND D4.[KEY_ID]=5
					INNER JOIN [T_DATA_VALUE] AS F  ON F .HEAD_ID=DH.ID AND F .[KEY_ID]=6
					INNER JOIN [T_DATA_VALUE] AS F1 ON F1.HEAD_ID=DH.ID AND F1.[KEY_ID]=7
					INNER JOIN [T_DATA_VALUE] AS F2 ON F2.HEAD_ID=DH.ID AND F2.[KEY_ID]=8
					INNER JOIN [T_DATA_VALUE] AS S  ON S .HEAD_ID=DH.ID AND S .[KEY_ID]=9
					INNER JOIN [T_DATA_VALUE] AS S1 ON S1.HEAD_ID=DH.ID AND S1.[KEY_ID]=10
					INNER JOIN [T_DATA_VALUE] AS S2 ON S2.HEAD_ID=DH.ID AND S2.[KEY_ID]=11
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_DATA','SELECT', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	PRINT '---- CURSOR'
	WAITFOR DELAY '00:00:02'
	SET @ROWCOUNT=0;
	SET @ROWCOUNT=@ROWDELTA;
	WHILE (@ROWCOUNT<@MAXCOUNT)
	BEGIN
		SET @START=GETDATE();
		-- Испытание
		DECLARE CURSOR1 CURSOR FOR
			SELECT TOP (@ROWCOUNT)
				[TYPE_ID], [SUM], [SUM1], [SUM2], [SUM3], [SUM4], [FLAG], [FLAG1], [FLAG2], [STR], [STR1], [STR2]
			FROM T_SOURCE
		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			-- Создаем голову
			INSERT INTO T_DATA_HEAD([TYPE_ID])  VALUES (@TYPE_ID);
			-- Сохраняем значение ID
			SET @CURRENTID=SCOPE_IDENTITY();
			-- Записываем значения в таблицу
			INSERT INTO [T_DATA_VALUE] ([HEAD_ID], [KEY_ID], VALUE_DECIMAL, VALUE_BIT, VALUE_STRING)
				VALUES	(@CURRENTID, 1 , @SUM , NULL , NULL),
						(@CURRENTID, 2 , @SUM1, NULL , NULL),
						(@CURRENTID, 3 , @SUM2, NULL , NULL),
						(@CURRENTID, 4 , @SUM3, NULL , NULL),
						(@CURRENTID, 5 , @SUM4, NULL , NULL),
						(@CURRENTID, 6 , NULL ,@FLAG , NULL),
						(@CURRENTID, 7 , NULL ,@FLAG1, NULL),
						(@CURRENTID, 8 , NULL ,@FLAG2, NULL),
						(@CURRENTID, 9 , NULL , NULL , @STR ),
						(@CURRENTID, 10, NULL , NULL , @STR1),
						(@CURRENTID, 11, NULL , NULL , @STR2);
			-- 
			FETCH NEXT FROM CURSOR1 INTO @TYPE_ID, @SUM, @SUM1, @SUM2, @SUM3, @SUM4, @FLAG, @FLAG1, @FLAG2, @STR, @STR1, @STR2;
		END
		CLOSE CURSOR1;
		DEALLOCATE CURSOR1;
		--
		INSERT [T_TEST_RESULT] ([TABLE_NAME], [OPERATION_NAME], [COUNT], [ATTEMPT], [NS])
		VALUES(N'T_DATA','CURSOR', @ROWCOUNT, @ATTEMPT, DATEDIFF(mcs, @START, GETDATE()));
		SET @ROWCOUNT=@ROWCOUNT+@ROWDELTA;
	END

	DELETE FROM [T_DATA_VALUE];
	DELETE FROM [T_DATA_HEAD];
	DELETE FROM [T_RESULT];

	-- Переходим к следующему испытанию
	SET @ATTEMPT=@ATTEMPT+1;
END

SET NOCOUNT OFF;
-- Печатаем данные испытаний
SELECT 
	[OPERATION_NAME], [COUNT],	
	AVG(CAST((CASE WHEN TABLE_NAME=N'T_STANDART' THEN [NS] ELSE 0 END) AS FLOAT))/1000 AS T_STANDART,
	AVG(CAST((CASE WHEN TABLE_NAME=N'T_JSON' THEN [NS] ELSE 0 END) AS FLOAT))/1000 AS T_JSON,
	AVG(CAST((CASE WHEN TABLE_NAME=N'T_XML' THEN [NS] ELSE 0 END) AS FLOAT))/1000 AS T_XML,
	AVG(CAST((CASE WHEN TABLE_NAME=N'T_DATA' THEN [NS] ELSE 0 END) AS FLOAT))/1000 AS T_DATA
FROM [T_TEST_RESULT]
GROUP BY [OPERATION_NAME], [COUNT]
ORDER BY [OPERATION_NAME], [COUNT]
